{"version":3,"file":"VueFinalModal.umd.js","sources":["../lib/utils/focusTrap.js","../lib/utils/dragResize.js","../lib/utils/bodyScrollLock.js","../lib/VueFinalModal.vue","../lib/VueFinalModal.vue?vue&type=template&id=2836fdb5&lang.js","../node_modules/style-inject/dist/style-inject.es.js","../lib/ModalsContainer.vue","../lib/ModalsContainer.vue?vue&type=template&id=74d49173&lang.js","../lib/PluginCore.js","../lib/utils/errors.js","../lib/Plugin.js"],"sourcesContent":["// stolen from vue-js-modal\n\nconst FOCUSABLE_ELEMENTS_QUERY =\n  'button:not([disabled]), ' +\n  'select:not([disabled]), ' +\n  'a[href]:not([disabled]), ' +\n  'area[href]:not([disabled]), ' +\n  '[contentEditable=\"\"]:not([disabled]), ' +\n  '[contentEditable=\"true\"]:not([disabled]), ' +\n  '[contentEditable=\"TRUE\"]:not([disabled]), ' +\n  'textarea:not([disabled]), ' +\n  'iframe:not([disabled]), ' +\n  'input:not([disabled]), ' +\n  'summary:not([disabled]), ' +\n  '[tabindex]:not([tabindex=\"-1\"])'\n\nconst isTabPressed = event => {\n  return event.key === 'Tab' || event.keyCode === 9\n}\n\nconst querySelectorAll = (element, selector) => {\n  return [...(element.querySelectorAll(selector) || [])]\n}\n\nconst queryFocusableElements = element => {\n  return querySelectorAll(element, FOCUSABLE_ELEMENTS_QUERY)\n}\n\nconst isFocused = element => {\n  return element == document.activeElement\n}\n\nconst isNothingFocused = () => {\n  return !document.activeElement\n}\n\nclass FocusTrap {\n  constructor() {\n    this.root = null\n    this.elements = []\n\n    this.onKeyDown = this.onKeyDown.bind(this)\n    this.enable = this.enable.bind(this)\n    this.disable = this.disable.bind(this)\n    this.firstElement = this.firstElement.bind(this)\n    this.lastElement = this.lastElement.bind(this)\n  }\n\n  lastElement() {\n    return this.elements[this.elements.length - 1] || null\n  }\n\n  firstElement() {\n    return this.elements[0] || null\n  }\n\n  onKeyDown(event) {\n    if (!isTabPressed(event)) {\n      return\n    }\n\n    // SHIFT + TAB\n    if (event.shiftKey) {\n      if (isFocused(this.firstElement())) {\n        this.lastElement().focus()\n        event.preventDefault()\n      }\n      return\n    }\n\n    // TAB\n    if (isNothingFocused() || isFocused(this.lastElement())) {\n      this.firstElement().focus()\n      event.preventDefault()\n      return\n    }\n  }\n\n  enabled() {\n    return !!this.root\n  }\n\n  enable(root) {\n    if (!root) {\n      return\n    }\n\n    this.root = root\n    this.elements = queryFocusableElements(this.root)\n\n    this.root.addEventListener('keydown', this.onKeyDown)\n  }\n\n  disable() {\n    this.root.removeEventListener('keydown', this.onKeyDown)\n    this.root = null\n  }\n}\n\nexport default FocusTrap\n","export const setStyle = (el, key, value) => {\n  const cacheStyle = el.style[key]\n  el.style[key] = value\n  return () => {\n    el.style[key] = cacheStyle\n  }\n}\n\nexport const getPosition = e => {\n  const { clientX: x, clientY: y } = e.targetTouches ? e.targetTouches[0] : e\n  return { x, y }\n}\n\nexport const capitalize = s => {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const clamp = (min, num, max) => {\n  if (typeof min !== 'number') {\n    min = Math.min(num, max) || num\n  }\n  if (typeof max !== 'number') {\n    max = Math.max(num, min)\n  }\n  return Math.min(Math.max(num, min), max)\n}\n\nexport const trimPx = distance => {\n  return (distance && Number(distance.replace(/px$/, ''))) || 0\n}\n\nexport const validDragElement = (e, el, dragSelector) => {\n  if (dragSelector === '') return true\n  const list = [...el.querySelectorAll(dragSelector)]\n  return list.includes(e.target)\n}\n\nconst pointerType = {\n  down: {\n    pc: 'mousedown',\n    m: 'touchstart'\n  },\n  move: {\n    pc: 'mousemove',\n    m: 'touchmove'\n  },\n  up: {\n    pc: 'mouseup',\n    m: 'touchend'\n  }\n}\nexport const addListener = (type, el, callback) => {\n  el && el.addEventListener(pointerType[type].pc, callback)\n  el && el.addEventListener(pointerType[type].m, callback, { passive: false })\n}\nexport const removeListener = (type, el, callback) => {\n  el && el.removeEventListener(pointerType[type].pc, callback)\n  el && el.removeEventListener(pointerType[type].m, callback)\n}\n","// stolen from body-scroll-lock\n\n// Older browsers don't support event options, feature detect it.\nlet hasPassiveEvents = false\nif (typeof window !== 'undefined') {\n  const passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true\n      return undefined\n    }\n  }\n  window.addEventListener('testPassive', null, passiveTestOptions)\n  window.removeEventListener('testPassive', null, passiveTestOptions)\n}\n\nconst isIosDevice =\n  typeof window !== 'undefined' &&\n  window.navigator &&\n  window.navigator.platform &&\n  (/iP(ad|hone|od)/.test(window.navigator.platform) ||\n    (window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1))\n\nlet locks = []\nlet documentListenerAdded = false\nlet clientY = 0\nlet initialClientY = -1\nlet previousBodyOverflowSetting\nlet previousBodyPaddingRight\n\nconst hasScrollbar = el => {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n  const style = window.getComputedStyle(el)\n  return ['auto', 'scroll'].includes(style.overflowY) && el.scrollHeight > el.clientHeight\n}\n\nconst shouldScroll = (el, delta) => {\n  if (el.scrollTop === 0 && delta < 0) return false\n  if (el.scrollTop + el.clientHeight + delta >= el.scrollHeight && delta > 0) return false\n  return true\n}\n\nconst composedPath = el => {\n  const path = []\n  while (el) {\n    path.push(el)\n    if (el.classList.contains('vfm')) return path\n    el = el.parentElement\n  }\n  return path\n}\n\nconst hasAnyScrollableEl = (el, delta) => {\n  let hasAnyScrollableEl = false\n  const path = composedPath(el)\n  path.forEach(el => {\n    if (hasScrollbar(el) && shouldScroll(el, delta)) {\n      hasAnyScrollableEl = true\n    }\n  })\n  return hasAnyScrollableEl\n}\n\n// returns true if `el` should be allowed to receive touchmove events.\nconst allowTouchMove = el => locks.some(() => hasAnyScrollableEl(el, -clientY))\n\nconst preventDefault = rawEvent => {\n  const e = rawEvent || window.event\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true\n  }\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true\n\n  if (e.preventDefault) e.preventDefault()\n\n  return false\n}\n\nconst setOverflowHidden = options => {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    const reserveScrollBarGap = !!options && options.reserveScrollBarGap === true\n    const scrollBarGap = window.innerWidth - document.documentElement.clientWidth\n\n    if (reserveScrollBarGap && scrollBarGap > 0) {\n      const computedBodyPaddingRight = parseInt(getComputedStyle(document.body).getPropertyValue('padding-right'), 10)\n      previousBodyPaddingRight = document.body.style.paddingRight\n      document.body.style.paddingRight = `${computedBodyPaddingRight + scrollBarGap}px`\n    }\n  }\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nconst restoreOverflowSetting = () => {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined\n  }\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nconst isTargetElementTotallyScrolled = targetElement =>\n  targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false\n\nconst handleScroll = (event, targetElement) => {\n  clientY = event.targetTouches[0].clientY - initialClientY\n\n  if (allowTouchMove(event.target)) {\n    return false\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event)\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event)\n  }\n\n  event.stopPropagation()\n  return true\n}\n\nexport const disableBodyScroll = (targetElement, options) => {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(lock => lock.targetElement === targetElement)) {\n    return\n  }\n\n  const lock = {\n    targetElement,\n    options: options || {}\n  }\n\n  locks = [...locks, lock]\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY\n      }\n    }\n    targetElement.ontouchmove = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement)\n      }\n    }\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = true\n    }\n  } else {\n    setOverflowHidden(options)\n  }\n}\n\nexport const enableBodyScroll = targetElement => {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  locks = locks.filter(lock => lock.targetElement !== targetElement)\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null\n    targetElement.ontouchmove = null\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = false\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting()\n  }\n}\n","<template>\n  <div\n    v-if=\"ssr || visible\"\n    v-show=\"!ssr || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': preventClick }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition\n      v-bind=\"computedOverlayTransition\"\n      @before-enter=\"beforeOverlayEnter\"\n      @after-enter=\"afterOverlayEnter\"\n      @before-leave=\"beforeOverlayLeave\"\n      @after-leave=\"afterOverlayLeave\"\n    >\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition\n      v-bind=\"computedTransition\"\n      @before-enter=\"beforeModalEnter\"\n      @after-enter=\"afterModalEnter\"\n      @before-leave=\"beforeModalLeave\"\n      @after-leave=\"afterModalLeave\"\n    >\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @click.self=\"onClickContainer\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': preventClick }]\"\n          :style=\"bindContentStyle\"\n        >\n          <slot :params=\"params\" :close=\"() => $emit('update:modelValue')\" />\n          <div\n            v-if=\"visibility.resize && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch, inject } from 'vue'\nimport FocusTrap from './utils/focusTrap.js'\nimport {\n  setStyle,\n  getPosition,\n  capitalize,\n  clamp,\n  trimPx,\n  validDragElement,\n  addListener,\n  removeListener\n} from './utils/dragResize.js'\nimport { disableBodyScroll, enableBodyScroll } from './utils/bodyScrollLock'\n\nconst noop = () => {}\n\nconst TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nconst resizeCursor = {\n  t: 'ns-resize',\n  tr: 'nesw-resize',\n  r: 'ew-resize',\n  br: 'nwse-resize',\n  b: 'ns-resize',\n  bl: 'nesw-resize',\n  l: 'ew-resize',\n  tl: 'nwse-resize'\n}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    ssr: { type: Boolean, default: true },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    preventClick: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: Number, default: 0 },\n    minHeight: { type: Number, default: 0 },\n    maxWidth: { type: Number, default: Infinity },\n    maxHeight: { type: Number, default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const $vfm = inject(props.options.key)\n\n    const modalStackIndex = ref(null)\n    const $focusTrap = new FocusTrap()\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false,\n      resize: false\n    })\n    const overlayTransitionState = ref(null)\n    const modalTransitionState = ref(null)\n    const _stopEvent = ref(false)\n    const params = ref({})\n    const dragResizeStyle = ref({})\n    const _state = ref(null)\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n    watch(() => props.lockScroll, handleLockScroll)\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n    watch(() => props.attach, mounted)\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n    watch(\n      () => props.drag,\n      val => {\n        if (visible.value) {\n          val ? addDragDown() : removeDragDown()\n        }\n      }\n    )\n    watch(\n      () => props.resize,\n      val => {\n        if (visible.value) {\n          val ? addResizeDown() : removeResizeDown()\n        }\n      }\n    )\n    watch(\n      () => props.keepChangedStyle,\n      val => {\n        if (!val) {\n          dragResizeStyle.value = {}\n        }\n      }\n    )\n\n    $vfm.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n    onBeforeUnmount(() => {\n      close()\n      props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n      root?.value?.remove()\n\n      let index = $vfm.modals.findIndex(vm => vm.uid === uid)\n      $vfm.modals.splice(index, 1)\n    })\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        $focusTrap,\n        toggle,\n        params\n      }\n    }\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            $vfm.openedModals.splice(index, 1)\n          }\n          $vfm.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = $vfm.openedModals.length - 1\n\n          handleLockScroll()\n\n          $vfm.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          startTransitionEnter()\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n    function close() {\n      let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        $vfm.openedModals.splice(index, 1)\n      }\n      if ($vfm.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = $vfm.openedModals[$vfm.openedModals.length - 1]\n        $_vm.props.focusTrap && $_vm.$focusTrap.firstElement().focus()\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      _state.value = null\n\n      startTransitionLeave()\n    }\n    function handleLockScroll() {\n      if (props.modelValue) {\n        nextTick(() => {\n          if (props.lockScroll) {\n            disableBodyScroll(vfmContainer.value, {\n              reserveScrollBarGap: true\n            })\n          } else {\n            enableBodyScroll(vfmContainer.value)\n          }\n        })\n      }\n    }\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function beforeOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Entering\n    }\n    function afterOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Enter\n    }\n    function beforeOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leaving\n    }\n    function afterOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leave\n    }\n    function beforeModalEnter() {\n      modalTransitionState.value = TransitionState.Entering\n    }\n    function afterModalEnter() {\n      modalTransitionState.value = TransitionState.Enter\n      if (props.focusRetain || props.focusTrap) {\n        vfmContainer.value.focus()\n      }\n      props.focusTrap && $focusTrap.enable(vfmContainer.value)\n      props.drag && addDragDown()\n      props.resize && addResizeDown()\n\n      emit('_opened')\n      emit('opened', createModalEvent({ type: 'opened' }))\n      resolveToggle('show')\n    }\n    function beforeModalLeave() {\n      modalTransitionState.value = TransitionState.Leaving\n\n      if ($focusTrap.enabled()) {\n        $focusTrap.disable()\n      }\n    }\n    function afterModalLeave() {\n      modalTransitionState.value = TransitionState.Leave\n      modalStackIndex.value = null\n      props.lockScroll && enableBodyScroll(vfmContainer.value)\n      if (!props.keepChangedStyle) {\n        dragResizeStyle.value = {}\n      }\n\n      let stopEvent = false\n      const event = createModalEvent({\n        type: 'closed',\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit('_closed')\n      emit('closed', event)\n      resolveToggle('hide')\n      if (stopEvent) return\n      params.value = {}\n    }\n    function onClickContainer() {\n      // skip when state equal 'resize:move'\n      if (_state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n    function emitState(e, state, action) {\n      _state.value = `${state}:${action}`\n      emit(_state.value, e)\n    }\n    function toggle(show, _params) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        if (value && arguments.length === 2) {\n          params.value = _params\n        }\n        emit('update:modelValue', value)\n      })\n    }\n    function pointerDown(e) {\n      e.stopPropagation()\n      const STATE_RESIZE = 'resize'\n      const STATE_DRAG = 'drag'\n      const direction = e.target.getAttribute('direction')\n      let state\n      if (direction) {\n        state = STATE_RESIZE\n      } else if (validDragElement(e, vfmContent.value, props.dragSelector)) {\n        state = STATE_DRAG\n      } else {\n        return\n      }\n      emitState(e, state, 'start')\n      const down = getPosition(e)\n      const rectContainer = vfmContainer.value.getBoundingClientRect()\n      const rectContent = vfmContent.value.getBoundingClientRect()\n      const isAbsolute = window.getComputedStyle(vfmContent.value).position === 'absolute'\n      const position = {\n        top: trimPx(dragResizeStyle.value.top),\n        left: trimPx(dragResizeStyle.value.left)\n      }\n      const limit = (() => {\n        if (props.fitParent) {\n          const limit = {\n            absolute() {\n              return {\n                minTop: 0,\n                minLeft: 0,\n                maxTop: rectContainer.height - rectContent.height,\n                maxLeft: rectContainer.width - rectContent.width\n              }\n            },\n            relative() {\n              return {\n                minTop: position.top + rectContainer.top - rectContent.top,\n                minLeft: position.left + rectContainer.left - rectContent.left,\n                maxTop: position.top + rectContainer.bottom - rectContent.bottom,\n                maxLeft: position.left + rectContainer.right - rectContent.right\n              }\n            }\n          }\n          return isAbsolute ? limit.absolute() : limit.relative()\n        } else {\n          return {}\n        }\n      })()\n      const resetBodyCursor = state === STATE_RESIZE && setStyle(document.body, 'cursor', resizeCursor[direction])\n\n      const moving = e => {\n        // onPointerMove\n        e.stopPropagation()\n        emitState(e, state, 'move')\n        const move = getPosition(e)\n        let offset = {\n          x: move.x - down.x,\n          y: move.y - down.y\n        }\n        if (state === STATE_RESIZE) {\n          offset = getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute)\n        }\n\n        let top\n        let left\n        if (isAbsolute) {\n          top = rectContent.top - rectContainer.top + offset.y\n          left = rectContent.left - rectContainer.left + offset.x\n        } else {\n          top = position.top + offset.y\n          left = position.left + offset.x\n        }\n        if (state === STATE_DRAG && props.fitParent) {\n          top = clamp(limit.minTop, top, limit.maxTop)\n          left = clamp(limit.minLeft, left, limit.maxLeft)\n        }\n        const style = {\n          position: 'relative',\n          top: top + 'px',\n          left: left + 'px',\n          margin: 'unset',\n          touchAction: 'none',\n          ...(isAbsolute && {\n            position: 'absolute',\n            transform: 'unset',\n            width: rectContent.width + 'px',\n            height: rectContent.height + 'px'\n          }),\n          ...(offset.width && { width: offset.width + 'px' }),\n          ...(offset.height && { height: offset.height + 'px' })\n        }\n\n        dragResizeStyle.value = {\n          ...dragResizeStyle.value,\n          ...style\n        }\n      }\n      const end = e => {\n        // onPointerUp\n        e.stopPropagation()\n        if (state === STATE_RESIZE) {\n          resetBodyCursor && resetBodyCursor()\n        }\n        // Excute onClickContainer before trigger emitState\n        setTimeout(() => {\n          emitState(e, state, 'end')\n        })\n        removeListener('move', document, moving)\n        removeListener('up', document, end)\n      }\n      addListener('move', document, moving)\n      addListener('up', document, end)\n    }\n    function addDragDown() {\n      addListener('down', vfmContent.value, pointerDown)\n      dragResizeStyle.value.touchAction = 'none'\n    }\n    function removeDragDown() {\n      removeListener('down', vfmContent.value, pointerDown)\n    }\n    function addResizeDown() {\n      visibility.resize = true\n      nextTick(() => {\n        addListener('down', vfmResize.value, pointerDown)\n      })\n    }\n    function removeResizeDown() {\n      removeListener('down', vfmResize.value, pointerDown)\n      visibility.resize = false\n    }\n    function getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute) {\n      const setOffset = dir => {\n        let offsetAxis = offset[dir.axis]\n        offsetAxis = props.fitParent ? clamp(dir.min, offsetAxis, dir.max) : offsetAxis\n        let edge = clamp(dir.minEdge, dir.getEdge(offsetAxis), dir.maxEdge)\n        offsetAxis = dir.getOffsetAxis(edge, isAbsolute)\n        return {\n          [dir.edgeName]: edge,\n          [dir.axis]: offsetAxis\n        }\n      }\n\n      const getDirectionInfo = (position, edgeName, axis, isPositive) => {\n        const rectContentEdge = rectContent[edgeName]\n        const positionOffset = rectContainer[position] - rectContent[position]\n        const EdgeName = capitalize(edgeName)\n        return {\n          axis,\n          edgeName,\n          min: isPositive ? positionOffset : -rectContentEdge,\n          max: isPositive ? rectContentEdge : positionOffset,\n          minEdge: props[`min${EdgeName}`],\n          maxEdge: props[`max${EdgeName}`],\n          getEdge: offsetAxis => rectContent[edgeName] - offsetAxis * (isPositive ? 1 : -1),\n          getOffsetAxis: (edge, isAbsolute) => {\n            const offsetAxis = rectContent[edgeName] - edge\n            if (isAbsolute) {\n              return isPositive ? offsetAxis : 0\n            } else {\n              return ((isPositive ? 1 : -1) * offsetAxis) / 2\n            }\n          }\n        }\n      }\n\n      const directions = {\n        t: ['top', 'height', 'y', true],\n        b: ['bottom', 'height', 'y', false],\n        l: ['left', 'width', 'x', true],\n        r: ['right', 'width', 'x', false]\n      }\n\n      let _offset = { x: 0, y: 0 }\n      direction.split('').forEach(dir => {\n        const directionInfo = getDirectionInfo(...directions[dir])\n        _offset = {\n          ..._offset,\n          ...setOffset(directionInfo)\n        }\n      })\n      return _offset\n    }\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      visible,\n      visibility,\n      params,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      beforeOverlayEnter,\n      afterOverlayEnter,\n      beforeOverlayLeave,\n      afterOverlayLeave,\n      beforeModalEnter,\n      afterModalEnter,\n      beforeModalLeave,\n      afterModalLeave,\n      onClickContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","<template>\n  <div\n    v-if=\"ssr || visible\"\n    v-show=\"!ssr || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': preventClick }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition\n      v-bind=\"computedOverlayTransition\"\n      @before-enter=\"beforeOverlayEnter\"\n      @after-enter=\"afterOverlayEnter\"\n      @before-leave=\"beforeOverlayLeave\"\n      @after-leave=\"afterOverlayLeave\"\n    >\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition\n      v-bind=\"computedTransition\"\n      @before-enter=\"beforeModalEnter\"\n      @after-enter=\"afterModalEnter\"\n      @before-leave=\"beforeModalLeave\"\n      @after-leave=\"afterModalLeave\"\n    >\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @click.self=\"onClickContainer\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': preventClick }]\"\n          :style=\"bindContentStyle\"\n        >\n          <slot :params=\"params\" :close=\"() => $emit('update:modelValue')\" />\n          <div\n            v-if=\"visibility.resize && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch, inject } from 'vue'\nimport FocusTrap from './utils/focusTrap.js'\nimport {\n  setStyle,\n  getPosition,\n  capitalize,\n  clamp,\n  trimPx,\n  validDragElement,\n  addListener,\n  removeListener\n} from './utils/dragResize.js'\nimport { disableBodyScroll, enableBodyScroll } from './utils/bodyScrollLock'\n\nconst noop = () => {}\n\nconst TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nconst resizeCursor = {\n  t: 'ns-resize',\n  tr: 'nesw-resize',\n  r: 'ew-resize',\n  br: 'nwse-resize',\n  b: 'ns-resize',\n  bl: 'nesw-resize',\n  l: 'ew-resize',\n  tl: 'nwse-resize'\n}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    ssr: { type: Boolean, default: true },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    preventClick: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: Number, default: 0 },\n    minHeight: { type: Number, default: 0 },\n    maxWidth: { type: Number, default: Infinity },\n    maxHeight: { type: Number, default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const $vfm = inject(props.options.key)\n\n    const modalStackIndex = ref(null)\n    const $focusTrap = new FocusTrap()\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false,\n      resize: false\n    })\n    const overlayTransitionState = ref(null)\n    const modalTransitionState = ref(null)\n    const _stopEvent = ref(false)\n    const params = ref({})\n    const dragResizeStyle = ref({})\n    const _state = ref(null)\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n    watch(() => props.lockScroll, handleLockScroll)\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n    watch(() => props.attach, mounted)\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n    watch(\n      () => props.drag,\n      val => {\n        if (visible.value) {\n          val ? addDragDown() : removeDragDown()\n        }\n      }\n    )\n    watch(\n      () => props.resize,\n      val => {\n        if (visible.value) {\n          val ? addResizeDown() : removeResizeDown()\n        }\n      }\n    )\n    watch(\n      () => props.keepChangedStyle,\n      val => {\n        if (!val) {\n          dragResizeStyle.value = {}\n        }\n      }\n    )\n\n    $vfm.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n    onBeforeUnmount(() => {\n      close()\n      props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n      root?.value?.remove()\n\n      let index = $vfm.modals.findIndex(vm => vm.uid === uid)\n      $vfm.modals.splice(index, 1)\n    })\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        $focusTrap,\n        toggle,\n        params\n      }\n    }\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            $vfm.openedModals.splice(index, 1)\n          }\n          $vfm.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = $vfm.openedModals.length - 1\n\n          handleLockScroll()\n\n          $vfm.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          startTransitionEnter()\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n    function close() {\n      let index = $vfm.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        $vfm.openedModals.splice(index, 1)\n      }\n      if ($vfm.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = $vfm.openedModals[$vfm.openedModals.length - 1]\n        $_vm.props.focusTrap && $_vm.$focusTrap.firstElement().focus()\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      _state.value = null\n\n      startTransitionLeave()\n    }\n    function handleLockScroll() {\n      if (props.modelValue) {\n        nextTick(() => {\n          if (props.lockScroll) {\n            disableBodyScroll(vfmContainer.value, {\n              reserveScrollBarGap: true\n            })\n          } else {\n            enableBodyScroll(vfmContainer.value)\n          }\n        })\n      }\n    }\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function beforeOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Entering\n    }\n    function afterOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Enter\n    }\n    function beforeOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leaving\n    }\n    function afterOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leave\n    }\n    function beforeModalEnter() {\n      modalTransitionState.value = TransitionState.Entering\n    }\n    function afterModalEnter() {\n      modalTransitionState.value = TransitionState.Enter\n      if (props.focusRetain || props.focusTrap) {\n        vfmContainer.value.focus()\n      }\n      props.focusTrap && $focusTrap.enable(vfmContainer.value)\n      props.drag && addDragDown()\n      props.resize && addResizeDown()\n\n      emit('_opened')\n      emit('opened', createModalEvent({ type: 'opened' }))\n      resolveToggle('show')\n    }\n    function beforeModalLeave() {\n      modalTransitionState.value = TransitionState.Leaving\n\n      if ($focusTrap.enabled()) {\n        $focusTrap.disable()\n      }\n    }\n    function afterModalLeave() {\n      modalTransitionState.value = TransitionState.Leave\n      modalStackIndex.value = null\n      props.lockScroll && enableBodyScroll(vfmContainer.value)\n      if (!props.keepChangedStyle) {\n        dragResizeStyle.value = {}\n      }\n\n      let stopEvent = false\n      const event = createModalEvent({\n        type: 'closed',\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit('_closed')\n      emit('closed', event)\n      resolveToggle('hide')\n      if (stopEvent) return\n      params.value = {}\n    }\n    function onClickContainer() {\n      // skip when state equal 'resize:move'\n      if (_state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n    function emitState(e, state, action) {\n      _state.value = `${state}:${action}`\n      emit(_state.value, e)\n    }\n    function toggle(show, _params) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        if (value && arguments.length === 2) {\n          params.value = _params\n        }\n        emit('update:modelValue', value)\n      })\n    }\n    function pointerDown(e) {\n      e.stopPropagation()\n      const STATE_RESIZE = 'resize'\n      const STATE_DRAG = 'drag'\n      const direction = e.target.getAttribute('direction')\n      let state\n      if (direction) {\n        state = STATE_RESIZE\n      } else if (validDragElement(e, vfmContent.value, props.dragSelector)) {\n        state = STATE_DRAG\n      } else {\n        return\n      }\n      emitState(e, state, 'start')\n      const down = getPosition(e)\n      const rectContainer = vfmContainer.value.getBoundingClientRect()\n      const rectContent = vfmContent.value.getBoundingClientRect()\n      const isAbsolute = window.getComputedStyle(vfmContent.value).position === 'absolute'\n      const position = {\n        top: trimPx(dragResizeStyle.value.top),\n        left: trimPx(dragResizeStyle.value.left)\n      }\n      const limit = (() => {\n        if (props.fitParent) {\n          const limit = {\n            absolute() {\n              return {\n                minTop: 0,\n                minLeft: 0,\n                maxTop: rectContainer.height - rectContent.height,\n                maxLeft: rectContainer.width - rectContent.width\n              }\n            },\n            relative() {\n              return {\n                minTop: position.top + rectContainer.top - rectContent.top,\n                minLeft: position.left + rectContainer.left - rectContent.left,\n                maxTop: position.top + rectContainer.bottom - rectContent.bottom,\n                maxLeft: position.left + rectContainer.right - rectContent.right\n              }\n            }\n          }\n          return isAbsolute ? limit.absolute() : limit.relative()\n        } else {\n          return {}\n        }\n      })()\n      const resetBodyCursor = state === STATE_RESIZE && setStyle(document.body, 'cursor', resizeCursor[direction])\n\n      const moving = e => {\n        // onPointerMove\n        e.stopPropagation()\n        emitState(e, state, 'move')\n        const move = getPosition(e)\n        let offset = {\n          x: move.x - down.x,\n          y: move.y - down.y\n        }\n        if (state === STATE_RESIZE) {\n          offset = getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute)\n        }\n\n        let top\n        let left\n        if (isAbsolute) {\n          top = rectContent.top - rectContainer.top + offset.y\n          left = rectContent.left - rectContainer.left + offset.x\n        } else {\n          top = position.top + offset.y\n          left = position.left + offset.x\n        }\n        if (state === STATE_DRAG && props.fitParent) {\n          top = clamp(limit.minTop, top, limit.maxTop)\n          left = clamp(limit.minLeft, left, limit.maxLeft)\n        }\n        const style = {\n          position: 'relative',\n          top: top + 'px',\n          left: left + 'px',\n          margin: 'unset',\n          touchAction: 'none',\n          ...(isAbsolute && {\n            position: 'absolute',\n            transform: 'unset',\n            width: rectContent.width + 'px',\n            height: rectContent.height + 'px'\n          }),\n          ...(offset.width && { width: offset.width + 'px' }),\n          ...(offset.height && { height: offset.height + 'px' })\n        }\n\n        dragResizeStyle.value = {\n          ...dragResizeStyle.value,\n          ...style\n        }\n      }\n      const end = e => {\n        // onPointerUp\n        e.stopPropagation()\n        if (state === STATE_RESIZE) {\n          resetBodyCursor && resetBodyCursor()\n        }\n        // Excute onClickContainer before trigger emitState\n        setTimeout(() => {\n          emitState(e, state, 'end')\n        })\n        removeListener('move', document, moving)\n        removeListener('up', document, end)\n      }\n      addListener('move', document, moving)\n      addListener('up', document, end)\n    }\n    function addDragDown() {\n      addListener('down', vfmContent.value, pointerDown)\n      dragResizeStyle.value.touchAction = 'none'\n    }\n    function removeDragDown() {\n      removeListener('down', vfmContent.value, pointerDown)\n    }\n    function addResizeDown() {\n      visibility.resize = true\n      nextTick(() => {\n        addListener('down', vfmResize.value, pointerDown)\n      })\n    }\n    function removeResizeDown() {\n      removeListener('down', vfmResize.value, pointerDown)\n      visibility.resize = false\n    }\n    function getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute) {\n      const setOffset = dir => {\n        let offsetAxis = offset[dir.axis]\n        offsetAxis = props.fitParent ? clamp(dir.min, offsetAxis, dir.max) : offsetAxis\n        let edge = clamp(dir.minEdge, dir.getEdge(offsetAxis), dir.maxEdge)\n        offsetAxis = dir.getOffsetAxis(edge, isAbsolute)\n        return {\n          [dir.edgeName]: edge,\n          [dir.axis]: offsetAxis\n        }\n      }\n\n      const getDirectionInfo = (position, edgeName, axis, isPositive) => {\n        const rectContentEdge = rectContent[edgeName]\n        const positionOffset = rectContainer[position] - rectContent[position]\n        const EdgeName = capitalize(edgeName)\n        return {\n          axis,\n          edgeName,\n          min: isPositive ? positionOffset : -rectContentEdge,\n          max: isPositive ? rectContentEdge : positionOffset,\n          minEdge: props[`min${EdgeName}`],\n          maxEdge: props[`max${EdgeName}`],\n          getEdge: offsetAxis => rectContent[edgeName] - offsetAxis * (isPositive ? 1 : -1),\n          getOffsetAxis: (edge, isAbsolute) => {\n            const offsetAxis = rectContent[edgeName] - edge\n            if (isAbsolute) {\n              return isPositive ? offsetAxis : 0\n            } else {\n              return ((isPositive ? 1 : -1) * offsetAxis) / 2\n            }\n          }\n        }\n      }\n\n      const directions = {\n        t: ['top', 'height', 'y', true],\n        b: ['bottom', 'height', 'y', false],\n        l: ['left', 'width', 'x', true],\n        r: ['right', 'width', 'x', false]\n      }\n\n      let _offset = { x: 0, y: 0 }\n      direction.split('').forEach(dir => {\n        const directionInfo = getDirectionInfo(...directions[dir])\n        _offset = {\n          ..._offset,\n          ...setOffset(directionInfo)\n        }\n      })\n      return _offset\n    }\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      visible,\n      visibility,\n      params,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      beforeOverlayEnter,\n      afterOverlayEnter,\n      beforeOverlayLeave,\n      afterOverlayLeave,\n      beforeModalEnter,\n      afterModalEnter,\n      beforeModalLeave,\n      afterModalLeave,\n      onClickContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_closed=\"slice(index)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {},\n  computed: {\n    api() {\n      return this[this.options.key]\n    }\n  },\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    async beforeOpen(e, modal, index) {\n      e.ref.params.value = modal.params\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_closed=\"slice(index)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {},\n  computed: {\n    api() {\n      return this[this.options.key]\n    }\n  },\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    async beforeOpen(e, modal, index) {\n      e.ref.params.value = modal.params\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","import VueFinalModal from './VueFinalModal.vue'\nimport ModalsContainer from './ModalsContainer.vue'\nimport { shallowReactive } from 'vue'\n\nfunction assignOptions(component, options) {\n  const _component = { ...component }\n  Object.assign(_component.props, {\n    options: { type: Object, default: () => options }\n  })\n  return _component\n}\n\nfunction createVfm(options) {\n  let vfm\n\n  return function() {\n    vfm = {\n      show(modal, ...args) {\n        switch (typeof modal) {\n          case 'string':\n            return this.toggle(modal, true, ...args)\n          case 'object': {\n            return Promise.allSettled([\n              new Promise((resolve, reject) => {\n                const defaultModal = {\n                  value: true,\n                  id: Symbol('dynamicModal'),\n                  component: options.componentName,\n                  bind: {},\n                  slots: {},\n                  on: {},\n                  params: args[0],\n                  reject,\n                  opened() {\n                    resolve('show')\n                  }\n                }\n                this.dynamicModals.push(shallowReactive(Object.assign(defaultModal, modal)))\n              })\n            ])\n          }\n        }\n      },\n      hide(...names) {\n        return this.toggle(names, false)\n      },\n      hideAll() {\n        return this.hide(...this.openedModals.map(modal => modal.props.name))\n      },\n      toggle(name, ...args) {\n        const modals = Array.isArray(name) ? this.get(...name) : this.get(name)\n        return Promise.allSettled(modals.map(modal => modal.toggle(...args)))\n      },\n      get(...names) {\n        return this.modals.filter(modal => names.includes(modal.props.name))\n      },\n      dynamicModals: shallowReactive([]),\n      openedModals: [],\n      modals: []\n    }\n    return vfm\n  }\n}\n\nexport function bindPrototype(app, options) {\n  const vfm = createVfm(options)()\n  Object.defineProperty(app.config.globalProperties, options.key, {\n    get() {\n      return vfm\n    }\n  })\n  app.provide(options.key, vfm)\n}\n\nexport function registModal(app, options) {\n  app.component(options.componentName, assignOptions(VueFinalModal, options))\n}\nexport function registContainer(app, options) {\n  app.component(options.dynamicContainerName, assignOptions(ModalsContainer, options))\n}\n","export const DUPLICATE_KEY = '[vue-final-modal] Duplicate registration API key of VueFinalModal.'\n\nexport const DUPLICATE_COMPONENT = '[vue-final-modal] Duplicate registration componentName of VueFinalModal.'\n\nexport const DUPLICATE_DYNAMIC_CONTAINER =\n  '[vue-final-modal] Duplicate registration dynamicContainerName of ModalsContainer.'\n","import { bindPrototype, registModal, registContainer } from './PluginCore'\nimport { DUPLICATE_KEY, DUPLICATE_COMPONENT, DUPLICATE_DYNAMIC_CONTAINER } from './utils/errors'\n\nconst defaultOptions = {\n  componentName: 'VueFinalModal',\n  dynamicContainerName: 'ModalsContainer',\n  key: '$vfm'\n}\n\nconst validPlugin = (duplicateKey, duplicateComponent, duplicateDynamicContainer) => {\n  if (!(duplicateKey || duplicateComponent || duplicateDynamicContainer)) return true\n\n  if (typeof window === 'undefined') return false\n\n  duplicateKey && console.error(DUPLICATE_KEY)\n  duplicateComponent && console.error(DUPLICATE_COMPONENT)\n  duplicateDynamicContainer && console.error(DUPLICATE_DYNAMIC_CONTAINER)\n\n  return false\n}\n\nconst Plugin = pluginOptions => ({\n  install(app, options) {\n    const _options = Object.assign({}, defaultOptions, pluginOptions, options)\n    const duplicateKey = app.config.globalProperties[_options.key]\n    const duplicateComponent = app._context.components[_options.componentName]\n    const duplicateDynamicContainer = app._context.components[_options.dynamicContainerName]\n\n    if (validPlugin(duplicateKey, duplicateComponent, duplicateDynamicContainer)) {\n      bindPrototype(app, _options)\n      registModal(app, _options)\n      registContainer(app, _options)\n    }\n  }\n})\n\nexport default Plugin\n"],"names":["queryFocusableElements","element","selector","querySelectorAll","isFocused","document","activeElement","FocusTrap","root","elements","onKeyDown","this","bind","enable","disable","firstElement","lastElement","length","event","key","keyCode","isTabPressed","shiftKey","focus","preventDefault","addEventListener","removeEventListener","getPosition","e","targetTouches","x","clientX","y","clientY","clamp","min","num","max","Math","trimPx","distance","Number","replace","pointerType","down","pc","m","move","up","addListener","type","el","callback","passive","removeListener","hasPassiveEvents","window","passiveTestOptions","previousBodyOverflowSetting","previousBodyPaddingRight","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","hasAnyScrollableEl","delta","path","push","classList","contains","parentElement","composedPath","forEach","nodeType","Node","ELEMENT_NODE","style","getComputedStyle","includes","overflowY","scrollHeight","clientHeight","hasScrollbar","scrollTop","shouldScroll","allowTouchMove","some","rawEvent","target","touches","disableBodyScroll","targetElement","options","lock","ontouchstart","ontouchmove","isTargetElementTotallyScrolled","stopPropagation","handleScroll","undefined","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","parseInt","body","getPropertyValue","paddingRight","overflow","setOverflowHidden","console","error","enableBodyScroll","filter","noop","TransitionState","resizeCursor","t","tr","r","br","b","bl","l","tl","props","name","String","modelValue","Boolean","ssr","classes","Object","Array","overlayClass","contentClass","styles","overlayStyle","contentStyle","lockScroll","hideOverlay","clickToClose","escToClose","preventClick","attach","validator","val","transition","overlayTransition","zIndexAuto","zIndexBase","zIndex","focusRetain","focusTrap","fitParent","drag","dragSelector","keepChangedStyle","resize","resizeDirections","value","indexOf","minWidth","minHeight","maxWidth","Infinity","maxHeight","emits","setup","emit","uid","Symbol","ref","vfmContainer","vfmContent","vfmResize","vfmOverlayTransition","vfmTransition","$vfm","inject","modalStackIndex","$focusTrap","visible","visibility","reactive","modal","overlay","overlayTransitionState","modalTransitionState","_stopEvent","params","dragResizeStyle","_state","resolveToggle","rejectToggle","computedOverlayTransition","computed","computedTransition","isComponentReadyToBeDestroyed","calculateZIndex","bindStyle","bindContentStyle","isArray","getModalInfo","getAttachElement","handleLockScroll","toggle","mounted","createModalEvent","emitEvent","appendChild","index","openedModals","findIndex","vm","splice","warn","concat","close","$_vm","removeDragDown","removeResizeDown","nextTick","querySelector","eventProps","eventType","stopEvent","stop","emitState","state","action","show","_params","Promise","resolve","reject","res","err","arguments","pointerDown","STATE_RESIZE","STATE_DRAG","direction","getAttribute","validDragElement","cacheStyle","rectContainer","getBoundingClientRect","rectContent","isAbsolute","position","top","left","limit","absolute","minTop","minLeft","maxTop","height","maxLeft","width","relative","bottom","right","resetBodyCursor","moving","offset","setOffset","dir","offsetAxis","axis","edge","minEdge","getEdge","maxEdge","getOffsetAxis","edgeName","getDirectionInfo","isPositive","s","rectContentEdge","positionOffset","EdgeName","charAt","toUpperCase","slice","directions","_offset","split","directionInfo","getResizeOffset","margin","touchAction","transform","end","setTimeout","addDragDown","addResizeDown","watch","display","flush","modals","onMounted","onBeforeUnmount","remove","beforeOverlayEnter","afterOverlayEnter","beforeOverlayLeave","afterOverlayLeave","beforeModalEnter","afterModalEnter","beforeModalLeave","enabled","afterModalLeave","onClickContainer","onEsc","$props","$setup","_createBlock","onKeydown","_createVNode","_mergeProps","onBeforeEnter","onAfterEnter","onBeforeLeave","onAfterLeave","toString","role","tabindex","onClick","_renderSlot","_ctx","_hoisted_1","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","api","methods","dynamicModals","beforeOpen","_this","$nextTick","isString","assignOptions","component","_component","assign","bindPrototype","app","vfm","args","allSettled","defaultModal","id","componentName","slots","on","opened","shallowReactive","hide","names","hideAll","map","get","createVfm","defineProperty","config","globalProperties","provide","$options","_toHandlers","on_closed","on_beforeOpen","on_opened","slot","_createCommentVNode","innerHTML","defaultOptions","dynamicContainerName","pluginOptions","install","_options","duplicateKey","duplicateComponent","duplicateDynamicContainer","validPlugin","_context","components","VueFinalModal","registModal","ModalsContainer","registContainer"],"mappings":"+qEAEA,IAsBMA,EAAyB,SAAAC,UAJN,SAACA,EAASC,YACrBD,EAAQE,iBAAiBD,IAAa,IAI3CC,CAAiBF,EAtBxB,qWAyBIG,EAAY,SAAAH,UACTA,GAAWI,SAASC,eAOvBC,qIAEGC,KAAO,UACPC,SAAW,QAEXC,UAAYC,KAAKD,UAAUE,KAAKD,WAChCE,OAASF,KAAKE,OAAOD,KAAKD,WAC1BG,QAAUH,KAAKG,QAAQF,KAAKD,WAC5BI,aAAeJ,KAAKI,aAAaH,KAAKD,WACtCK,YAAcL,KAAKK,YAAYJ,KAAKD,wDAG3C,kBACSA,KAAKF,SAASE,KAAKF,SAASQ,OAAS,IAAM,iCAGpD,kBACSN,KAAKF,SAAS,IAAM,8BAG7B,SAAUS,MAxCS,SAAAA,SACE,QAAdA,EAAMC,KAAmC,IAAlBD,EAAME,QAwC7BC,CAAaH,QAKdA,EAAMI,gBA7BJjB,SAASC,eAsCWF,EAAUO,KAAKK,qBAClCD,eAAeQ,aACpBL,EAAMM,yBAVFpB,EAAUO,KAAKI,uBACZC,cAAcO,QACnBL,EAAMM,0CAaZ,mBACWb,KAAKH,2BAGhB,SAAOA,GACAA,SAIAA,KAAOA,OACPC,SAAWT,EAAuBW,KAAKH,WAEvCA,KAAKiB,iBAAiB,UAAWd,KAAKD,mCAG7C,gBACOF,KAAKkB,oBAAoB,UAAWf,KAAKD,gBACzCF,KAAO,0CCvFHmB,EAAc,SAAAC,SACUA,EAAEC,cAAgBD,EAAEC,cAAc,GAAKD,QACnE,CAAEE,IADDC,QACIC,IADQC,UAQTC,EAAQ,SAACC,EAAKC,EAAKC,SACX,iBAARF,IACTA,EAAMG,KAAKH,IAAIC,EAAKC,IAAQD,GAEX,iBAARC,IACTA,EAAMC,KAAKD,IAAID,EAAKD,IAEfG,KAAKH,IAAIG,KAAKD,IAAID,EAAKD,GAAME,IAGzBE,EAAS,SAAAC,UACZA,GAAYC,OAAOD,EAASE,QAAQ,MAAO,MAAS,GASxDC,EAAc,CAClBC,KAAM,CACJC,GAAI,YACJC,EAAG,cAELC,KAAM,CACJF,GAAI,YACJC,EAAG,aAELE,GAAI,CACFH,GAAI,UACJC,EAAG,aAGMG,EAAc,SAACC,EAAMC,EAAIC,GACpCD,GAAMA,EAAG1B,iBAAiBkB,EAAYO,GAAML,GAAIO,GAChDD,GAAMA,EAAG1B,iBAAiBkB,EAAYO,GAAMJ,EAAGM,EAAU,CAAEC,SAAS,KAEzDC,EAAiB,SAACJ,EAAMC,EAAIC,GACvCD,GAAMA,EAAGzB,oBAAoBiB,EAAYO,GAAML,GAAIO,GACnDD,GAAMA,EAAGzB,oBAAoBiB,EAAYO,GAAMJ,EAAGM,ICtDhDG,GAAmB,EACvB,GAAsB,oBAAXC,OAAwB,KAC3BC,EAAqB,eAEvBF,GAAmB,IAIvBC,OAAO/B,iBAAiB,cAAe,KAAMgC,GAC7CD,OAAO9B,oBAAoB,cAAe,KAAM+B,GAGlD,IAWIC,EACAC,EAZEC,EACc,oBAAXJ,QACPA,OAAOK,WACPL,OAAOK,UAAUC,WAChB,iBAAiBC,KAAKP,OAAOK,UAAUC,WACP,aAA9BN,OAAOK,UAAUC,UAA2BN,OAAOK,UAAUG,eAAiB,GAE/EC,EAAQ,GACRC,GAAwB,EACxBjC,EAAU,EACVkC,GAAkB,EA2BhBC,EAAqB,SAACjB,EAAIkB,OAC1BD,GAAqB,SAXN,SAAAjB,WACbmB,EAAO,GACNnB,GAAI,IACTmB,EAAKC,KAAKpB,GACNA,EAAGqB,UAAUC,SAAS,OAAQ,OAAOH,EACzCnB,EAAKA,EAAGuB,qBAEHJ,EAKMK,CAAaxB,GACrByB,SAAQ,SAAAzB,IA1BM,SAAAA,OACdA,GAAMA,EAAG0B,WAAaC,KAAKC,aAAc,OAAO,MAE/CC,EAAQxB,OAAOyB,iBAAiB9B,SAC/B,CAAC,OAAQ,UAAU+B,SAASF,EAAMG,YAAchC,EAAGiC,aAAejC,EAAGkC,cAuBtEC,CAAanC,IApBA,SAACA,EAAIkB,WACH,IAAjBlB,EAAGoC,WAAmBlB,EAAQ,GAC9BlB,EAAGoC,UAAYpC,EAAGkC,aAAehB,GAASlB,EAAGiC,cAAgBf,EAAQ,GAkB/CmB,CAAarC,EAAIkB,KACvCD,GAAqB,MAGlBA,GAIHqB,EAAiB,SAAAtC,UAAMc,EAAMyB,MAAK,kBAAMtB,EAAmBjB,GAAKlB,OAEhET,EAAiB,SAAAmE,OACf/D,EAAI+D,GAAYnC,OAAOtC,cAMzBuE,EAAe7D,EAAEgE,UAIjBhE,EAAEiE,QAAQ5E,OAAS,IAEnBW,EAAEJ,gBAAgBI,EAAEJ,kBAEjB,KAgEIsE,EAAoB,SAACC,EAAeC,MAE1CD,OASD9B,EAAMyB,MAAK,SAAAO,UAAQA,EAAKF,gBAAkBA,UAIxCE,EAAO,CACXF,cAAAA,EACAC,QAASA,GAAW,IAGtB/B,cAAYA,IAAOgC,IAEfrC,GACFmC,EAAcG,aAAe,SAAAhF,GACQ,IAA/BA,EAAMW,cAAcZ,SAEtBkD,EAAiBjD,EAAMW,cAAc,GAAGI,UAG5C8D,EAAcI,YAAc,SAAAjF,GACS,IAA/BA,EAAMW,cAAcZ,QAnDT,SAACC,EAAO6E,GAC3B9D,EAAUf,EAAMW,cAAc,GAAGI,QAAUkC,GAEvCsB,EAAevE,EAAM0E,UAIrBG,GAA6C,IAA5BA,EAAcR,WAAmBtD,EAAU,GAV3B,SAAA8D,WACrCA,GAAgBA,EAAcX,aAAeW,EAAcR,WAAaQ,EAAcV,aAclFe,CAA+BL,IAAkB9D,EAAU,EAHtDT,EAAeN,GAQxBA,EAAMmF,mBAoCAC,CAAapF,EAAO6E,IAInB7B,IACH7D,SAASoB,iBAAiB,YAAaD,EAAgB+B,EAAmB,CAAEF,SAAS,QAAUkD,GAC/FrC,GAAwB,IAnGJ,SAAA8B,WAESO,IAA7B5C,EAAwC,KACpC6C,IAAwBR,IAA2C,IAAhCA,EAAQQ,oBAC3CC,EAAejD,OAAOkD,WAAarG,SAASsG,gBAAgBC,eAE9DJ,GAAuBC,EAAe,EAAG,KACrCI,EAA2BC,SAAS7B,iBAAiB5E,SAAS0G,MAAMC,iBAAiB,iBAAkB,IAC7GrD,EAA2BtD,SAAS0G,KAAK/B,MAAMiC,aAC/C5G,SAAS0G,KAAK/B,MAAMiC,uBAAkBJ,EAA2BJ,cAIjCF,IAAhC7C,IACFA,EAA8BrD,SAAS0G,KAAK/B,MAAMkC,SAClD7G,SAAS0G,KAAK/B,MAAMkC,SAAW,UAuF/BC,CAAkBnB,SArClBoB,QAAQC,MACN,mHAwCOC,EAAmB,SAAAvB,GACzBA,GAQL9B,EAAQA,EAAMsD,QAAO,SAAAtB,UAAQA,EAAKF,gBAAkBA,KAEhDnC,GACFmC,EAAcG,aAAe,KAC7BH,EAAcI,YAAc,KAExBjC,GAA0C,IAAjBD,EAAMhD,SACjCZ,SAASqB,oBAAoB,YAAaF,EAAgB+B,EAAmB,CAAEF,SAAS,QAAUkD,GAClGrC,GAAwB,IAEhBD,EAAMhD,cAzGesF,IAA7B5C,IACFtD,SAAS0G,KAAK/B,MAAMiC,aAAetD,EAInCA,OAA2B4C,QAGOA,IAAhC7C,IACFrD,SAAS0G,KAAK/B,MAAMkC,SAAWxD,EAI/BA,OAA8B6C,KA4E9Ba,QAAQC,MACN,iHC9GAG,EAAO,aAEPC,EACG,QADHA,EAEM,WAFNA,EAGG,QAHHA,EAIK,SAGLC,EAAe,CACnBC,EAAG,YACHC,GAAI,cACJC,EAAG,YACHC,GAAI,cACJC,EAAG,YACHC,GAAI,cACJC,EAAG,YACHC,GAAI,iBAGS,CACbC,MAAO,CACLC,KAAM,CAAElF,KAAMmF,eAAiB,MAC/BC,WAAY,CAAEpF,KAAMqF,iBAAkB,GACtCC,IAAK,CAAEtF,KAAMqF,iBAAkB,GAC/BE,QAAS,CAAEvF,KAAM,CAACmF,OAAQK,OAAQC,eAAiB,IACnDC,aAAc,CAAE1F,KAAM,CAACmF,OAAQK,OAAQC,eAAiB,IACxDE,aAAc,CAAE3F,KAAM,CAACmF,OAAQK,OAAQC,eAAiB,IACxDG,OAAQ,CAAE5F,KAAM,CAACwF,OAAQC,eAAiB,iBAAO,KACjDI,aAAc,CAAE7F,KAAM,CAACwF,OAAQC,eAAiB,iBAAO,KACvDK,aAAc,CAAE9F,KAAM,CAACwF,OAAQC,eAAiB,iBAAO,KACvDM,WAAY,CAAE/F,KAAMqF,iBAAkB,GACtCW,YAAa,CAAEhG,KAAMqF,iBAAkB,GACvCY,aAAc,CAAEjG,KAAMqF,iBAAkB,GACxCa,WAAY,CAAElG,KAAMqF,iBAAkB,GACtCc,aAAc,CAAEnG,KAAMqF,iBAAkB,GACxCe,OAAQ,CACNpG,KAAM,cACG,EACTqG,mBAAUC,OACFtG,IAAcsG,SAEP,YAATtG,GAA+B,WAATA,GAEnBsG,EAAI3E,WAAaC,KAAKC,eAGjC0E,WAAY,CAAEvG,KAAM,CAACmF,OAAQK,gBAAkB,OAC/CgB,kBAAmB,CAAExG,KAAM,CAACmF,OAAQK,gBAAkB,OACtDiB,WAAY,CAAEzG,KAAMqF,iBAAkB,GACtCqB,WAAY,CAAE1G,KAAM,CAACmF,OAAQ5F,gBAAkB,KAC/CoH,OAAQ,CAAE3G,KAAM,CAACqF,QAASF,OAAQ5F,iBAAkB,GACpDqH,YAAa,CAAE5G,KAAMqF,iBAAkB,GACvCwB,UAAW,CAAE7G,KAAMqF,iBAAkB,GACrCyB,UAAW,CAAE9G,KAAMqF,iBAAkB,GACrC0B,KAAM,CAAE/G,KAAMqF,iBAAkB,GAChC2B,aAAc,CAAEhH,KAAMmF,eAAiB,IACvC8B,iBAAkB,CAAEjH,KAAMqF,iBAAkB,GAC5C6B,OAAQ,CACNlH,KAAMqF,iBACG,GAEX8B,iBAAkB,CAChBnH,KAAMyF,cACG,iBAAM,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,OACtDY,UAAW,SAAAC,SACT,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,MAAMjC,QAAO,SAAA+C,UAAiC,IAAxBd,EAAIe,QAAQD,MAAerJ,SAAWuI,EAAIvI,SAE3GuJ,SAAU,CAAEtH,KAAMT,eAAiB,GACnCgI,UAAW,CAAEvH,KAAMT,eAAiB,GACpCiI,SAAU,CAAExH,KAAMT,eAAiBkI,EAAAA,GACnCC,UAAW,CAAE1H,KAAMT,eAAiBkI,EAAAA,IAEtCE,MAAO,CACL,oBACA,gBACA,cACA,SACA,eACA,SACA,eACA,UACA,UACA,aACA,YACA,WACA,eACA,cACA,cAEFC,eAAM3C,SAAS4C,IAAAA,KACPC,EAAMC,OAAO,OACbzK,EAAO0K,MAAI,MACXC,EAAeD,MAAI,MACnBE,EAAaF,MAAI,MACjBG,EAAYH,MAAI,MAChBI,EAAuBJ,MAAI,MAC3BK,EAAgBL,MAAI,MAEpBM,EAAOC,SAAOtD,EAAMnC,QAAQ7E,KAE5BuK,EAAkBR,MAAI,MACtBS,EAAa,IAAIpL,EAEjBqL,EAAUV,OAAI,GACdW,EAAaC,WAAS,CAC1BC,OAAO,EACPC,SAAS,EACT5B,QAAQ,IAEJ6B,EAAyBf,MAAI,MAC7BgB,EAAuBhB,MAAI,MAC3BiB,EAAajB,OAAI,GACjBkB,EAASlB,MAAI,IACbmB,EAAkBnB,MAAI,IACtBoB,EAASpB,MAAI,MACfqB,EAAgB/E,EAChBgF,EAAehF,EAEbiF,EAA4BC,YAAS,iBACF,iBAA5BvE,EAAMuB,kBAAuC,CAAEtB,KAAMD,EAAMuB,wBAC1DvB,EAAMuB,sBAGdiD,EAAqBD,YAAS,iBACF,iBAArBvE,EAAMsB,WAAgC,CAAErB,KAAMD,EAAMsB,iBACnDtB,EAAMsB,eAGdmD,EAAgCF,YAAS,kBAE1CvE,EAAMe,aAAe+C,EAAuB3B,QAAU7C,IACvDyE,EAAqB5B,QAAU7C,KAI7BoF,EAAkBH,YAAS,kBACV,IAAjBvE,EAAM0B,SACJ1B,EAAMwB,aACAxB,EAAMyB,WAAa,GAAK8B,EAAgBpB,OAAS,GAKpDnC,EAAM0B,UAIXiD,EAAYJ,YAAS,wBAEO,IAA1BG,EAAgBvC,OAAmB,CACrCT,OAAQgD,EAAgBvC,WAKxByC,EAAmBL,YAAS,eAC5B1H,EAAQ,CAACqH,EAAgB/B,cAC7B3B,MAAMqE,QAAQ7E,EAAMa,cAAgBhE,EAAMT,WAANS,IAAcmD,EAAMa,eAAgBhE,EAAMT,KAAK4D,EAAMa,cAClFhE,cAgFAiI,UACA,CACLjC,IAAAA,EACA7C,MAAAA,EACA4C,KAAAA,EACAI,aAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,qBAAAA,EACAC,cAAAA,EACA2B,iBAAAA,EACAxB,gBAAAA,EACAG,WAAAA,EACAsB,iBAAAA,EACAxB,WAAAA,EACAyB,OAAAA,GACAhB,OAAAA,YAGKiB,OACHlF,EAAMG,WAAY,IACpByC,EAAK,eAAgBuC,EAAiB,CAAEpK,KAAM,kBAC1CqK,EAAU,eAAe,eAC3Bf,EAAa,YAIX5G,EAASsH,OACTtH,IAA2B,IAAjBuC,EAAMmB,OAAkB,EACnB,IAAjBnB,EAAMmB,QAAoB1D,EAAO4H,YAAYhN,EAAK8J,WAE9CmD,EAAQjC,EAAKkC,aAAaC,WAAU,SAAAC,UAAMA,EAAG5C,MAAQA,MAE1C,IAAXyC,GAEFjC,EAAKkC,aAAaG,OAAOJ,EAAO,GAElCjC,EAAKkC,aAAanJ,KAAK0I,KAEvBvB,EAAgBpB,MAAQkB,EAAKkC,aAAazM,OAAS,EAEnDkM,IAEA3B,EAAKkC,aACFnG,QAAO,SAAAqG,UAAMA,EAAG5C,MAAQA,KACxBpG,SAAQ,SAACgJ,EAAIH,GACRG,EAAGV,qBAAuBtH,IAE5BgI,EAAGlC,gBAAgBpB,MAAQmD,EAC3BG,EAAG/B,WAAWG,SAAU,MAI9BJ,EAAQtB,OAAQ,EA2DpBuB,EAAWG,SAAU,EACrBH,EAAWE,OAAQ,OA1DK,IAAXnG,GACTwB,QAAQ0G,KAAK,2BAA2BC,OAAO5F,EAAMmB,mBAIlD0E,QACHP,EAAQjC,EAAKkC,aAAaC,WAAU,SAAAC,UAAMA,EAAG5C,MAAQA,SAC1C,IAAXyC,GAEFjC,EAAKkC,aAAaG,OAAOJ,EAAO,GAE9BjC,EAAKkC,aAAazM,OAAS,EAAG,KAE1BgN,EAAOzC,EAAKkC,aAAalC,EAAKkC,aAAazM,OAAS,GAC1DgN,EAAK9F,MAAM4B,WAAakE,EAAKtC,WAAW5K,eAAeQ,SACnD0M,EAAK9F,MAAM2B,aAAemE,EAAK9F,MAAM4B,YACvCkE,EAAK9C,aAAab,MAAM/I,SAEzB0M,EAAK9F,MAAMe,cAAgB+E,EAAKpC,WAAWG,SAAU,GAExD7D,EAAM8B,MAAQiE,KACd/F,EAAMiC,QAAU+D,KAChB7B,EAAOhC,MAAQ,KAuCfuB,EAAWG,SAAU,EACrBH,EAAWE,OAAQ,WApCZoB,IACHhF,EAAMG,YACR8F,YAAS,WACHjG,EAAMc,WACRnD,EAAkBqF,EAAab,MAAO,CACpC9D,qBAAqB,IAGvBc,EAAiB6D,EAAab,mBAK7B4C,WAEc,IAAjB/E,EAAMmB,SAEyB,iBAAjBnB,EAAMmB,SAElB9F,QACOA,OAAOnD,SAASgO,cAAclG,EAAMmB,QAMtCnB,EAAMmB,iBAgFVgE,QAAiBgB,yDAAa,aAEnCpD,IAAK+B,KACFqB,YAGEf,EAAUgB,EAAWjE,OACxBkE,GAAY,EACVtN,EAAQoM,EAAiB,CAC7BpK,KAAMqL,EACNE,gBACED,GAAY,YAGhBzD,EAAKwD,EAAWrN,KACZsN,IACFrC,EAAW7B,OAAQ,EACnB8D,YAAS,WACPrD,EAAK,oBAAqBT,OAErB,YAIFoE,GAAU9M,EAAG+M,EAAOC,GAC3BtC,EAAOhC,gBAAWqE,cAASC,GAC3B7D,EAAKuB,EAAOhC,MAAO1I,YAEZwL,GAAOyB,EAAMC,0BACb,IAAIC,SAAQ,SAACC,EAASC,GAC3B1C,EAAgB,SAAA2C,GACdF,EAAQE,GACR3C,EAAgB/E,GAElBgF,EAAe,SAAA2C,GACbF,EAAOE,GACP3C,EAAehF,OAEX8C,EAAwB,kBAATuE,EAAqBA,GAAQ1G,EAAMG,WACpDgC,GAA8B,IAArB8E,EAAUnO,SACrBmL,EAAO9B,MAAQwE,GAEjB/D,EAAK,oBAAqBT,eAGrB+E,GAAYzN,GACnBA,EAAEyE,sBAIEsI,EAHEW,EAAe,SACfC,EAAa,OACbC,EAAY5N,EAAEgE,OAAO6J,aAAa,gBAEpCD,EACFb,EAAQW,MACH,CAAA,IFphBmB,SAAC1N,EAAGuB,EAAI+G,SACjB,KAAjBA,KACa/G,EAAGhD,iBAAiB+J,IACzBhF,SAAStD,EAAEgE,QEihBR8J,CAAiB9N,EAAGwJ,EAAWd,MAAOnC,EAAM+B,qBACrDyE,EAAQY,EAIVb,GAAU9M,EAAG+M,EAAO,aFxjBDxL,EAAIhC,EAAKmJ,EAC1BqF,EEwjBI/M,EAAOjB,EAAYC,GACnBgO,EAAgBzE,EAAab,MAAMuF,wBACnCC,EAAc1E,EAAWd,MAAMuF,wBAC/BE,EAAoE,aAAvDvM,OAAOyB,iBAAiBmG,EAAWd,OAAO0F,SACvDA,EACCzN,EAAO8J,EAAgB/B,MAAM2F,KAD9BD,EAEEzN,EAAO8J,EAAgB/B,MAAM4F,MAE/BC,EAAS,cACThI,EAAM6B,UAAW,KACbmG,EAAQ,CACZC,0BACS,CACLC,OAAQ,EACRC,QAAS,EACTC,OAAQX,EAAcY,OAASV,EAAYU,OAC3CC,QAASb,EAAcc,MAAQZ,EAAYY,QAG/CC,0BACS,CACLN,OAAQL,EAAeJ,EAAcK,IAAMH,EAAYG,IACvDK,QAASN,EAAgBJ,EAAcM,KAAOJ,EAAYI,KAC1DK,OAAQP,EAAeJ,EAAcgB,OAASd,EAAYc,OAC1DH,QAAST,EAAgBJ,EAAciB,MAAQf,EAAYe,gBAI1Dd,EAAaI,EAAMC,WAAaD,EAAMQ,iBAEtC,GAtBI,GAyBTG,EAAkBnC,IAAUW,IF1lBfnM,EE0lBwC9C,SAAS0G,KF1lB7C5F,EE0lBmD,SF1lB9CmJ,EE0lBwD5C,EAAa8H,GFzlB/FG,EAAaxM,EAAG6B,MAAM7D,GAC5BgC,EAAG6B,MAAM7D,GAAOmJ,EACT,WACLnH,EAAG6B,MAAM7D,GAAOwO,IEwlBRoB,EAAS,SAAAnP,GAEbA,EAAEyE,kBACFqI,GAAU9M,EAAG+M,EAAO,YAUhBsB,EACAC,EAVEnN,EAAOpB,EAAYC,GACrBoP,EAAS,CACXlP,EAAGiB,EAAKjB,EAAIc,EAAKd,EACjBE,EAAGe,EAAKf,EAAIY,EAAKZ,GAEf2M,IAAUW,IACZ0B,WAsEmBxB,EAAWwB,EAAQpB,EAAeE,EAAaC,OAChEkB,EAAY,SAAAC,SACZC,EAAaH,EAAOE,EAAIE,MAC5BD,EAAahJ,EAAM6B,UAAY9H,EAAMgP,EAAI/O,IAAKgP,EAAYD,EAAI7O,KAAO8O,MACjEE,EAAOnP,EAAMgP,EAAII,QAASJ,EAAIK,QAAQJ,GAAaD,EAAIM,gBAC3DL,EAAaD,EAAIO,cAAcJ,EAAMtB,UAElCmB,EAAIQ,SAAWL,OACfH,EAAIE,KAAOD,MAIVQ,EAAmB,SAAC3B,EAAU0B,EAAUN,EAAMQ,OF3qBhCC,EE4qBZC,EAAkBhC,EAAY4B,GAC9BK,EAAiBnC,EAAcI,GAAYF,EAAYE,GACvDgC,GF9qBYH,EE8qBUH,GF7qBzBO,OAAO,GAAGC,cAAgBL,EAAEM,MAAM,SE8qB9B,CACLf,KAAAA,EACAM,SAAAA,EACAvP,IAAKyP,EAAaG,GAAkBD,EACpCzP,IAAKuP,EAAaE,EAAkBC,EACpCT,QAASnJ,eAAY6J,IACrBR,QAASrJ,eAAY6J,IACrBT,QAAS,SAAAJ,UAAcrB,EAAY4B,GAAYP,GAAcS,EAAa,GAAK,IAC/EH,cAAe,SAACJ,EAAMtB,OACdoB,EAAarB,EAAY4B,GAAYL,SACvCtB,EACK6B,EAAaT,EAAa,GAExBS,EAAa,GAAK,GAAKT,EAAc,KAMhDiB,EAAa,CACjBzK,EAAG,CAAC,MAAO,SAAU,KAAK,GAC1BI,EAAG,CAAC,SAAU,SAAU,KAAK,GAC7BE,EAAG,CAAC,OAAQ,QAAS,KAAK,GAC1BJ,EAAG,CAAC,QAAS,QAAS,KAAK,IAGzBwK,EAAU,CAAEvQ,EAAG,EAAGE,EAAG,UACzBwN,EAAU8C,MAAM,IAAI1N,SAAQ,SAAAsM,OACpBqB,EAAgBZ,iBAAoBS,EAAWlB,KACrDmB,SACKA,GACApB,EAAUsB,OAGVF,EAxHMG,CAAgBhD,EAAWwB,EAAQpB,EAAeE,EAAaC,IAKtEA,GACFE,EAAMH,EAAYG,IAAML,EAAcK,IAAMe,EAAOhP,EACnDkO,EAAOJ,EAAYI,KAAON,EAAcM,KAAOc,EAAOlP,IAEtDmO,EAAMD,EAAegB,EAAOhP,EAC5BkO,EAAOF,EAAgBgB,EAAOlP,GAE5B6M,IAAUY,GAAcpH,EAAM6B,YAChCiG,EAAM/N,EAAMiO,EAAME,OAAQJ,EAAKE,EAAMI,QACrCL,EAAOhO,EAAMiO,EAAMG,QAASJ,EAAMC,EAAMM,cAEpCzL,SACJgL,SAAU,WACVC,IAAKA,EAAM,KACXC,KAAMA,EAAO,KACbuC,OAAQ,QACRC,YAAa,QACT3C,GAAc,CAChBC,SAAU,WACV2C,UAAW,QACXjC,MAAOZ,EAAYY,MAAQ,KAC3BF,OAAQV,EAAYU,OAAS,OAE3BQ,EAAON,OAAS,CAAEA,MAAOM,EAAON,MAAQ,OACxCM,EAAOR,QAAU,CAAEA,OAAQQ,EAAOR,OAAS,OAGjDnE,EAAgB/B,aACX+B,EAAgB/B,OAChBtF,IAgBP/B,EAAY,OAAQ5C,SAAU0Q,GAC9B9N,EAAY,KAAM5C,UAdN,SAANuS,EAAMhR,GAEVA,EAAEyE,kBACEsI,IAAUW,GACZwB,GAAmBA,IAGrB+B,YAAW,WACTnE,GAAU9M,EAAG+M,EAAO,UAEtBrL,EAAe,OAAQjD,SAAU0Q,GACjCzN,EAAe,KAAMjD,SAAUuS,eAK1BE,KACP7P,EAAY,OAAQmI,EAAWd,MAAO+E,IACtChD,EAAgB/B,MAAMoI,YAAc,gBAE7BxE,KACP5K,EAAe,OAAQ8H,EAAWd,MAAO+E,aAElC0D,KACPlH,EAAWzB,QAAS,EACpBgE,YAAS,WACPnL,EAAY,OAAQoI,EAAUf,MAAO+E,gBAGhClB,KACP7K,EAAe,OAAQ+H,EAAUf,MAAO+E,IACxCxD,EAAWzB,QAAS,SApbtB4I,SACE,kBAAM7K,EAAMG,cACZ,SAAAgC,MACM6B,EAAW7B,MACb6B,EAAW7B,OAAQ,UAGrB+C,KACK/C,EAAO,IACNiD,EAAU,gBAAgB,eAC5Bf,EAAa,QAGfwB,QAINgF,SAAM,kBAAM7K,EAAMc,aAAYkE,GAC9B6F,SACE,kBAAM7K,EAAMe,eACZ,SAAAoB,GACMnC,EAAMG,aAAegC,IACvBuB,EAAWG,SAAU,MAI3BgH,SAAM,kBAAM7K,EAAMmB,SAAQ+D,GAC1B2F,QACEpG,GACA,SAAApD,GACMA,IACFoC,EAAQtB,OAAQ,EAChBa,EAAab,MAAMtF,MAAMiO,QAAU,UAGvC,CACEC,MAAO,SAGXF,SACE,kBAAM7K,EAAM8B,QACZ,SAAAT,GACMoC,EAAQtB,QACVd,EAAMsJ,KAAgB5E,SAI5B8E,SACE,kBAAM7K,EAAMiC,UACZ,SAAAZ,GACMoC,EAAQtB,QACVd,EAAMuJ,KAAkB5E,SAI9B6E,SACE,kBAAM7K,EAAMgC,oBACZ,SAAAX,GACOA,IACH6C,EAAgB/B,MAAQ,OAK9BkB,EAAK2H,OAAO5O,KAAK0I,KAEjBmG,aAAU,WACR/F,OAEFgG,mBAAgB,iBACdrF,IACA7F,EAAMc,YAAckC,EAAab,OAAShD,EAAiB6D,EAAab,OACxE9J,MAAAA,aAAAA,EAAM8J,sBAAOgJ,aAET7F,EAAQjC,EAAK2H,OAAOxF,WAAU,SAAAC,UAAMA,EAAG5C,MAAQA,KACnDQ,EAAK2H,OAAOtF,OAAOJ,EAAO,MA+ZrB,CACLjN,KAAAA,EACA2K,aAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,qBAAAA,EACAC,cAAAA,EACAkB,0BAAAA,EACAE,mBAAAA,EACAf,QAAAA,EACAC,WAAAA,EACAO,OAAAA,EACAS,gBAAAA,EACAC,UAAAA,EACAC,iBAAAA,EACAwG,8BAnTAtH,EAAuB3B,MAAQ7C,GAoT/B+L,6BAjTAvH,EAAuB3B,MAAQ7C,GAkT/BgM,8BA/SAxH,EAAuB3B,MAAQ7C,GAgT/BiM,6BA7SAzH,EAAuB3B,MAAQ7C,GA8S/BkM,4BA3SAzH,EAAqB5B,MAAQ7C,GA4S7BmM,2BAzSA1H,EAAqB5B,MAAQ7C,GACzBU,EAAM2B,aAAe3B,EAAM4B,YAC7BoB,EAAab,MAAM/I,QAErB4G,EAAM4B,WAAa4B,EAAW9K,OAAOsK,EAAab,OAClDnC,EAAM8B,MAAQ6I,KACd3K,EAAMiC,QAAU2I,KAEhBhI,EAAK,WACLA,EAAK,SAAUuC,EAAiB,CAAEpK,KAAM,YACxCqJ,EAAc,SAgSdsH,4BA7RA3H,EAAqB5B,MAAQ7C,EAEzBkE,EAAWmI,WACbnI,EAAW7K,WA2RbiT,2BAvRA7H,EAAqB5B,MAAQ7C,EAC7BiE,EAAgBpB,MAAQ,KACxBnC,EAAMc,YAAc3B,EAAiB6D,EAAab,OAC7CnC,EAAMgC,mBACTkC,EAAgB/B,MAAQ,QAGtBkE,GAAY,EACVtN,EAAQoM,EAAiB,CAC7BpK,KAAM,SACNuL,gBACED,GAAY,KAGhBzD,EAAK,WACLA,EAAK,SAAU7J,GACfqL,EAAc,QACViC,IACJpC,EAAO9B,MAAQ,KAsQf0J,4BAlQqB,gBAAjB1H,EAAOhC,QACXS,EAAK,gBAAiBuC,EAAiB,CAAEpK,KAAM,mBAC/CiF,EAAMgB,cAAgB4B,EAAK,qBAAqB,KAiQhDkJ,iBA9PIrI,EAAQtB,OAASnC,EAAMiB,YACzB2B,EAAK,qBAAqB,wFCvctBG,IAAI,kBACE,gJAnDRgJ,OAAOC,0CADfC,2BAGElJ,IAAI,OACHlG,MAAOmP,mBACF,uBACGD,2DAA0EA,kBAClFG,oDAAaF,kDAEdG,2BAAAC,0CAEGC,cAAcL,qBACdM,aAAaN,oBACbO,cAAcP,qBACdQ,aAAaR,kCAEd,mBACSD,eAAeC,aAAWnI,uBADnCoI,kCAEQ,qDACEF,gBACPlP,MAAOkP,sIAGZI,2BAAAC,mCAEGC,cAAcL,mBACdM,aAAaN,kBACbO,cAAcP,mBACdQ,aAAaR,gCAEd,mCAAAG,qBAEEpJ,IAAI,sBACE,4DACEgJ,WACPlP,MAAOkP,yBACQC,aAAWpI,MAAM6I,WACjCC,KAAK,sBACM,OACXC,SAAS,KACRC,uDAAYZ,yEAEbG,qBACEpJ,IAAI,oBACE,gBACGgJ,oCAAqCA,kBAC7ClP,MAAOmP,qBAERa,iCAAO5I,OAAQ+H,SAASnG,wBAAaiH,gCAE7Bd,aAAW/J,QAAU+J,aAAWpI,qBADxCqI,oBAAAc,oBAKEd,2CACsBF,6BAAb1E,wBADT4E,qBAEGjT,IAAKqO,EACLA,UAAWA,+BACWA,GACjB,gJA5BJ2E,aAAWpI,uGA7BdmI,OAAOC,iDCHpB,SAAqBgB,EAAKjK,QACX,IAARA,IAAiBA,EAAM,QACxBkK,EAAWlK,EAAIkK,YAEdD,GAA2B,oBAAb9U,cAEfgV,EAAOhV,SAASgV,MAAQhV,SAASiV,qBAAqB,QAAQ,GAC9DtQ,EAAQ3E,SAASkV,cAAc,SACnCvQ,EAAM9B,KAAO,WAEI,QAAbkS,GACEC,EAAKG,WACPH,EAAKI,aAAazQ,EAAOqQ,EAAKG,YAKhCH,EAAK7H,YAAYxI,GAGfA,EAAM0Q,WACR1Q,EAAM0Q,WAAWC,QAAUR,EAE3BnQ,EAAMwI,YAAYnN,SAASuV,eAAeT,s/DCA/B,CACbhN,MAAO,GACPuE,SAAU,CACRmJ,sBACSlV,KAAKA,KAAKqF,QAAQ7E,OAG7B2U,QAAS,CACP3D,eAAM1E,QACCoI,IAAIE,cAAclI,OAAOJ,EAAO,IAEjCuI,oBAAWpU,EAAGmK,EAAO0B,qCACzB7L,EAAEsJ,IAAIkB,OAAO9B,MAAQyB,EAAMK,aACrB6J,EAAKC,kBACLD,EAAKC,YACNnK,EAAMzB,QACT2L,EAAK9D,MAAM1E,GACX1B,EAAMkD,OAAO,4LAGjBkH,kBAAS3M,SACe,iBAARA,cC3CP,oBCGb,SAAS4M,EAAcC,EAAWrQ,OAC1BsQ,OAAkBD,UACxB3N,OAAO6N,OAAOD,EAAWnO,MAAO,CAC9BnC,QAAS,CAAE9C,KAAMwF,eAAiB,kBAAM1C,MAEnCsQ,EAuDF,SAASE,EAAcC,EAAKzQ,OAC3B0Q,EArDR,SAAmB1Q,UAGV,iBACC,CACJ6I,cAAK9C,qCAAU4K,mCAAAA,6BACE5K,QACR,gBACIpL,KAAKyM,mBAAOrB,GAAO,UAAS4K,QAChC,gBACI5H,QAAQ6H,WAAW,CACxB,IAAI7H,SAAQ,SAACC,EAASC,OACd4H,EAAe,CACnBvM,OAAO,EACPwM,GAAI7L,OAAO,gBACXoL,UAAWrQ,EAAQ+Q,cACnBnW,KAAM,GACNoW,MAAO,GACPC,GAAI,GACJ7K,OAAQuK,EAAK,GACb1H,OAAAA,EACAiI,kBACElI,EAAQ,UAGZiH,EAAKF,cAAcxR,KAAK4S,kBAAgBzO,OAAO6N,OAAOM,EAAc9K,YAM9EqL,2CAAQC,2BAAAA,yBACC1W,KAAKyM,OAAOiK,GAAO,IAE5BC,0BACS3W,KAAKyW,kBAAQzW,KAAK+M,aAAa6J,KAAI,SAAAxL,UAASA,EAAM5D,MAAMC,WAEjEgF,gBAAOhF,8BAASuO,mCAAAA,wBACRxD,EAASxK,MAAMqE,QAAQ5E,GAAQzH,KAAK6W,iBAAOpP,IAAQzH,KAAK6W,IAAIpP,UAC3D2G,QAAQ6H,WAAWzD,EAAOoE,KAAI,SAAAxL,UAASA,EAAMqB,aAANrB,EAAgB4K,QAEhEa,0CAAOH,2BAAAA,yBACE1W,KAAKwS,OAAO5L,QAAO,SAAAwE,UAASsL,EAAMnS,SAAS6G,EAAM5D,MAAMC,UAEhE2N,cAAeoB,kBAAgB,IAC/BzJ,aAAc,GACdyF,OAAQ,KAOAsE,CAAUzR,EAAVyR,GACZ/O,OAAOgP,eAAejB,EAAIkB,OAAOC,iBAAkB5R,EAAQ7E,IAAK,CAC9DqW,sBACSd,KAGXD,EAAIoB,QAAQ7R,EAAQ7E,IAAKuV,uDDtEzBtC,oBAAAc,oBACEd,2CAE2B0D,MAAI/B,wBAArBhK,EAAO0B,wBAFjB2G,wCACOrI,EAAMsK,WADb9B,cAGGpT,IAAK4K,EAAM+K,IACJ/K,EAAMnL,iBACLmL,EAAMzB,+CAANyB,EAAMzB,UACfyN,eAAYd,KACXe,6BAASF,QAAMrK,IACfwK,cAAa,SAAArW,UAAKkW,aAAWlW,EAAGmK,IAChCmM,UAASnM,EAAMmL,2CAEgBnL,EAAMiL,gBAApBmB,EAAMhX,eAAsBA,gBAC5C,kBAAAiX,uDACWN,WAASK,kBAApB/D,2BAA2BiE,UAAQF,yCACnC/D,wCAAgB+D,EAAK9B,WAArB9B,qBAA+C4D,EAAKvX,KAAMmX,aAAMI,EAAKlB,+JEhBtE,ICGDqB,EAAiB,CACrBvB,cAAe,gBACfwB,qBAAsB,kBACtBpX,IAAK,eAeQ,SAAAqX,SAAkB,CAC/BC,iBAAQhC,EAAKzQ,OACL0S,EAAWhQ,OAAO6N,OAAO,GAAI+B,EAAgBE,EAAexS,IAdlD,SAAC2S,EAAcC,EAAoBC,WAC/CF,GAAgBC,GAAsBC,KAEtB,oBAAXrV,SAEXmV,GAAgBvR,QAAQC,MDdG,sECe3BuR,GAAsBxR,QAAQC,MDbG,4ECcjCwR,GAA6BzR,QAAQC,MDXrC,uFCO0C,IAgBpCyR,CAJiBrC,EAAIkB,OAAOC,iBAAiBc,EAASvX,KAC/BsV,EAAIsC,SAASC,WAAWN,EAAS3B,eAC1BN,EAAIsC,SAASC,WAAWN,EAASH,yBAGjE/B,EAAcC,EAAKiC,GF6ClB,SAAqBjC,EAAKzQ,GAC/ByQ,EAAIJ,UAAUrQ,EAAQ+Q,cAAeX,EAAc6C,EAAejT,IE7C9DkT,CAAYzC,EAAKiC,GF+ChB,SAAyBjC,EAAKzQ,GACnCyQ,EAAIJ,UAAUrQ,EAAQuS,qBAAsBnC,EAAc+C,EAAiBnT,IE/CvEoT,CAAgB3C,EAAKiC"}